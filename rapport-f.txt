
#####################################################################
RAPPORT explication 
#####################################################################

Tableau RTUPB (post-opératoire) 
-------------------------------- 

******************************************
PAM
******************************************
sil<-numeric(20)
for(k in 2:20) { sil[[k]]<-pam(RTUPBpost,k)$silinfo$avg.width }
plot(2:20, sil[2:20], main = "RTUPBpost clustering using PAM", xlab = "#clusters", ylab="sil.avg.width", sub="from 2 to 20")

au vu de la courbe, on s'intéresse à k=2,3 et 12

respam2 = pam(RTUPBpost, 2)
respam3 = pam(RTUPBpost, 3)
respam12 = pam(RTUPBpost, 12)


> respam2
Medoids:
     ID IPSS QoL Qmax (ml/s) IPSS__1 QoL__1 Qmax(ml/s) IPSS__2 QoL__2
[1,] 35   10   3        12.5       2      2       14.8       2      2
[2,] 33    1   1        50.0       1      0       50.0       1      0
     Qmax (ml/s)__1 IPSS__3 QoL__3 Qmax (ml/s)__2 IPSS__4 QoL__4 Qmax (ml/s)__3
[1,]           15.3       2      2           16.1       2      2           16.1
[2,]           50.0       1      1           50.0       1      1           50.0
     IPSS__5 QoL__5 Qmax (ml/s)__4 IPSS__6 QoL__6 Qmax (ml/s)__5
[1,]       2      2           16.0       2      2           16.0
[2,]       1      1           49.7       1      1           49.7
Clustering vector:
 [1] 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1
Objective function:
   build     swap 
10.40704 10.40704 

Medoids:
     ID IPSS QoL Qmax (ml/s) IPSS__1 QoL__1 Qmax(ml/s) IPSS__2 QoL__2
[1,] 35   10   3        12.5       2      2       14.8       2      2
[2,] 33    1   1        50.0       1      0       50.0       1      0
[3,] 29    2   2        26.2       1      0       32.6       1      0
     Qmax (ml/s)__1 IPSS__3 QoL__3 Qmax (ml/s)__2 IPSS__4 QoL__4 Qmax (ml/s)__3
[1,]           15.3       2      2           16.1       2      2           16.1
[2,]           50.0       1      1           50.0       1      1           50.0
[3,]           33.6       1      0           34.2       1      0           34.2
     IPSS__5 QoL__5 Qmax (ml/s)__4 IPSS__6 QoL__6 Qmax (ml/s)__5
[1,]       2      2           16.0       2      2           16.0
[2,]       1      1           49.7       1      1           49.7
[3,]       1      0           33.0       1      0           33.0
Clustering vector:
 [1] 1 1 1 1 1 1 1 1 1 1 2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 1 1 1 2 1 1 1
Objective function:
   build     swap 
7.820492 7.820492 

Available components:
 [1] "medoids"    "id.med"     "clustering" "objective"  "isolation"  "clusinfo"  
 [7] "silinfo"    "diss"       "call"       "data"  

> respam12
Medoids:
      ID IPSS QoL Qmax (ml/s) IPSS__1 QoL__1 Qmax(ml/s) IPSS__2 QoL__2
 [1,] 35   10   3        12.5       2      2       14.8       2      2
 [2,] 32    6   2         9.2       3      2       11.8       2      2
 [3,]  3    8   3         8.5       6      2       10.6       2      2
 [4,] 36    9   4        11.8       4      2       14.8       2      2
 [5,] 18   14   2         8.9       7      2       11.9       4      2
 [6,] 23    6   3         9.2       7      2       15.6       1      1
 [7,] 24    8   3         5.5       4      3        7.4       2      2
 [8,] 25    3   2        17.0       2      3       10.8       3      2
 [9,] 34    6   3        12.4       2      2       15.7       2      2
[10,] 33    1   1        50.0       1      0       50.0       1      0
[11,] 29    2   2        26.2       1      0       32.6       1      0
[12,] 27   11   3         5.5       4      2        7.9       2      2
      Qmax (ml/s)__1 IPSS__3 QoL__3 Qmax (ml/s)__2 IPSS__4 QoL__4 Qmax (ml/s)__3
 [1,]           15.3       2      2           16.1       2      2           16.1
 [2,]           13.4       1      1           14.2       1      1           14.2
 [3,]           11.2       1      1           10.9       1      1           10.9
 [4,]           17.6       2      2           18.1       2      2           18.1
 [5,]           16.4       4      2           15.9       4      2           15.9
 [6,]           20.2       1      1           19.6       1      1           19.6
 [7,]            9.6       2      1           11.2       2      1           11.2
 [8,]           10.0       3      1           10.4       3      1           10.4
 [9,]           14.9       2      2           15.1       2      2           15.1
[10,]           50.0       1      1           50.0       1      1           50.0
[11,]           33.6       1      0           34.2       1      0           34.2
[12,]            6.8       1      0            8.1       1      0            8.1
      IPSS__5 QoL__5 Qmax (ml/s)__4 IPSS__6 QoL__6 Qmax (ml/s)__5
 [1,]       2      2           16.0       2      2           16.0
 [2,]       1      1           14.4       1      1           14.4
 [3,]       1      1           11.2       1      1           11.2
 [4,]       2      2           17.9       2      2           17.9
 [5,]       4      2           15.5       4      2           15.5
 [6,]       1      1           18.8       1      1           18.8
 [7,]       2      1           12.4       2      1           12.4
 [8,]       3      1           11.1       3      1           11.1
 [9,]       2      2           14.9       2      2           14.9
[10,]       1      1           49.7       1      1           49.7
[11,]       1      0           33.0       1      0           33.0
[12,]       1      0            8.8       1      0            8.8
Clustering vector:
 [1]  1  2  3  4  5  6  7  8  9  9 10 11 12  1  2  3  4  5  6  7  8  9  6  7  8  1
[27] 12 10 11  4  1  2 10  9  1  4
Objective function:
    build      swap 
0.9861456 0.9861456 


respam2=> silhouette moyenne max, mais silhouette montre 2 patients mal classés
respam3=> tous les individus sont bien classés (silhouettes des classes toutes > 0.75)
respam12=> 2 clusters de patients a silhouette 0.3 < s < 0.5

******************************************
CAH
******************************************
rescah<-hclust(dist(RTUPBpost))
plot(rescah, hang=-1)
rect.hclust(rescah, 3)
Scission à 3 clusters à droite de l'arbre.

******************************************
Profils de guérison
******************************************
IPSSmedoids<-NULL
QoLmedoids<-NULL
QMaxmedoids<-NULL
for (k in 1:3) { 
  IPSSmedoids<-rbind(IPSSmedoids, RTUPBpost[respam3$medoids[k],c(1,4,7,10,13,16,19)])
  QoLmedoids<-rbind(QoLmedoids, RTUPBpost[respam3$medoids[k],c(2,5,8,11,14,17,20)])
  QMaxmedoids<-rbind(QMaxmedoids, RTUPBpost[respam3$medoids[k],c(3,6,9,12,15,18,21)])
}
par(mfrow=c(1,3))
for (m in 1:3) {
 plot( x <- c(1:7), y <- IPSSmedoids[m, x], type = "l", col= m, main = paste("IPSS for profile #", as.character(m)))
 plot( x <- c(1:7), y <- QoLmedoids[m, x], type = "l", col= m, main = paste("QoL for profile #", as.character(m)))
 plot( x <- c(1:7), y <- QMaxmedoids[m, x], type = "l", col= m, main = paste("QMax for profile #", as.character(m))) 
}

Profil #1
- Guérison rapide < 3 mois, bonne miction (Qmax) dès 3 mois, puis stabilisation de Qmax à 6 mois après un max à 3 mois
Profil #2
- Guérison graduelle sur 9 mois selon tous les indicateurs
Profil #3
- Guérison lente, avec une période difficile (QoL) jusqu'à  9 mois après l'opération, la qualite de miction (Qmax)
s'améliore nettement sur les 9 premiers mois mais reste inférieure à celle constatée dans les autres profils


Tableau VBPPS (post-opératoire) 
-------------------------------- 

******************************************
PAM
******************************************
sil<-numeric(20)
for(k in 2:20) { sil[[k]]<-pam(VBPPSpost,k)$silinfo$avg.width }
plot(2:20, sil[2:20], main = "VBPPSpost clustering using PAM", xlab = "#clusters", ylab="sil.avg.width", sub="from 2 to 20")

au vu de la courbe, on s'intéresse à k=4 et k=12

respam4 = pam(VBPPSpost, 4)
respam12 = pam(VBPPSpost, 12)

dans k=12, de nombreuses classes mal caractérisées (silhouette faible, voire == 0!)
à silhouette moyenne équivalente, on préférera k=4 où 3 classes sont très bien caractérisées (sil > 0.9)
et la 4ème moyennement (sil > 0.5)

******************************************
CAH
******************************************

******************************************
Profils de guérison
******************************************
IPSSmedoids<-NULL
QoLmedoids<-NULL
QMaxmedoids<-NULL
for (k in 1:4) { 
  IPSSmedoids<-rbind(IPSSmedoids, VBPPSpost[respam4$medoids[k],c(1,4,7,10,13,16,19)])
  QoLmedoids<-rbind(QoLmedoids, VBPPSpost[respam4$medoids[k],c(2,5,8,11,14,17,20)])
  QMaxmedoids<-rbind(QMaxmedoids, VBPPSpost[respam4$medoids[k],c(3,6,9,12,15,18,21)])
}
par(mfrow=c(1,3))
for (m in 1:4) {
 plot( x <- c(1:7), y <- IPSSmedoids[m, x], type = "l", col= m, main = paste("IPSS for profile #", as.character(m)))
 plot( x <- c(1:7), y <- QoLmedoids[m, x], type = "l", col= m, main = paste("QoL for profile #", as.character(m)))
 plot( x <- c(1:7), y <- QMaxmedoids[m, x], type = "l", col= m, main = paste("QMax for profile #", as.character(m))) 
}


Tableau VAPOR (post-opératoire) 
-------------------------------- 
library(readxl)
rawVAPOR <- read_excel("VAPOR.xlsx", col_types = c("skip", 
    "numeric", "logical", "numeric", "logical", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "logical", "numeric", "logical", "numeric", 
    "numeric", "numeric", "logical", "logical", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric"), skip = 1)
View(rawVAPOR)
VAPORpre<-rawVAPOR[,c(1:20)]
VAPORpre_clean<-rawVAPOR[!duplicated(rawVAPOR),-c(10,11,12,14)]

******************************************
PAM
******************************************
sil<-numeric(20)
for(k in 2:20) { sil[[k]]<-pam(VAPORpre_clean,k)$silinfo$avg.width }
plot(2:20, sil[2:20], main = "VAPORpre clustering using PAM", xlab = "#clusters", ylab="sil.avg.width", sub="from 2 to 20")

******************************************
Classification supervisée RTUPB-VPPBS
******************************************
******************************************
IPSS
******************************************
******************************************
QoL
******************************************
******************************************
Qmax
******************************************
******************************************
Classification supervisée VAPOR
******************************************
******************************************
IPSS
******************************************
fitIPSS<-rpart(IPSS__4 ~ ., data = rawVAPOR[,c(01:20,33)])
plot(fitIPSS, main="VAPOR: prédiction IPSS à 12 mois")
text(fitIPSS,use.n=TRUE)
******************************************
QoL
******************************************
fitQoL<-rpart(QoL__4 ~ ., data = rawVAPOR[,c(01:20,34)])
plot(fitQoL, main="VAPOR: prédiction QoL à 12 mois")
text(fitQoL,use.n=TRUE)
******************************************
Qmax
******************************************
fitQmax<-rpart(`Qmax (ml/s)__3` ~ ., data = rawVAPOR[,c(01:20,35)])
plot(fitQmax, main="VAPOR: prédiction Qmax à 12 mois")
text(fitQmax,use.n=TRUE)
