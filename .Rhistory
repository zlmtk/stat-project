A<-list("4","5","1)
zz
exit
"
)):
A<-list("4","5","1")
A
$A
Edit A
length(A)
A<-list("5","4")
A<-list("4","5","1")
A<-list("4","5")
A<-list("4","5","1")
B<-list("4","5","1")
B
df2 <- data.frame(
IDS = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
CESD = c(1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1))
)
dataset <- data.frame (A=c("4","5","1"),B=c("5","4"))
dataset <- data.frame ( A = c("4","5","1"),B= c("5","4") )
dataset <- data.frame ( A = c("4","5","1"),B=c("5","4") )
dataset <- data.frame ( A = c("4","5","1"), B=c("5","4") )
dataset <- data.frame ( A = c("4","5","1"), B=c("5","4","yy") )
sets::gset_similarity(c("4","5","1"), c("5","4"), "Jaccard")
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
sets::gset_similarity(c("4","5","1"), c("5","4"), "Jaccard")
sets::gset_similarity(c("4","5","1"), c("5","4"), "Jaccard")
sets::gset_similarity(set("4","5","1"), set("5","4"), "Jaccard")
sets::gset_similarity(sets::set("4","5","1"), sets::set("5","4"), "Jaccard")
?sets::set
sets::gset_similarity(sets::set("4","5","1"), sets::set("2","5","4"), "Jaccard")
?sets::gset_similarity
sets::gset_dissimilarity(sets::set("4","5","1"), sets::set("2","5","4"), "Jaccard")
sets::gset_dissimilarity(sets::set("4","5","1"), sets::set("5","4"), "Jaccard")
save.image("C:\\Users\\icerow\\Desktop\\cours\\statistiques\\stat-exp\\.RData")
q()
setwd("~/GitHub/stat-project")
load("~/GitHub/stat-project/workspace-g.RData")
D<-daisy(RTUPBpost, type=list(ordratio = c('QoL','QoL__1','QoL__2','QoL__3','QoL__4','QoL__5','QoL__6')))
D<-cluster::daisy(RTUPBpost, type=list(ordratio = c('QoL','QoL__1','QoL__2','QoL__3','QoL__4','QoL__5','QoL__6')))
D<-cluster::daisy(postRTUPB, type=list(ordratio = c('QoL','QoL__1','QoL__2','QoL__3','QoL__4','QoL__5','QoL__6')))
D<-cluster::daisy(preRTUPB, type=list(ordratio = c('QoL','QoL__1','QoL__2','QoL__3','QoL__4','QoL__5','QoL__6')))
plot(preRTUPBclean.pam.k9)
View(preRTUPBclean.pam.k9)
View(preRTUPBclean)
preRTUPBclean
preRTUPBclean[c(11,28),]
preRTUPBclean et preRTUPBcleanNoDuplicated
> result<-NULL
> for(va in 2:20){
+     x<-cluster::pam(preRTUPBcleanNoDuplicated,va)
+     result[va] <- x$silinfo$avg.width }
> plot (result, xlab = "Nombre de clusters", ylab = "Moyenne silhouette")
> abline (v=12,col="blue")
x<-cluster::pam(preRTUPBclean,va)
plot(x)
x<-cluster::pam(preRTUPBclean,2)
plot(x)
x<-cluster::pam(preRTUPBclean,12)
plot(x)
x<-cluster::pam(preRTUPBclean,11)
plot(x)
plot(x2
)
x<-cluster::pam(preRTUPBclean,12)
plot(x2
plot(x)
plot(x)
x<-cluster::pam(preRTUPBclean,10)
plot(x)
x<-cluster::pam(preRTUPBclean,11)
plot(x)
View(preRTUPBclean)
View(preRTUPBclean)
View(preRTUPBclean)
View(preRTUPBclean.pam)
View(preRTUPBclean)
View(postVPBBS)
View(preRTUPB)
View(clusterResultPam.k9)
