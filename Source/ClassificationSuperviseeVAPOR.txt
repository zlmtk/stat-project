# **********************************
# Classification supervisée VAPOR
# **********************************
library(readxl)
rawVAPOR <- read_excel("VAPOR.xlsx", col_types = c("text", 
    "numeric", "logical", "numeric", "logical", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "logical", "numeric", "logical", "numeric", 
    "numeric", "numeric", "logical", "logical", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric", "numeric", "numeric", "numeric", 
    "numeric"), skip = 1)
View(rawVAPOR)
library(rpart)
library(randomForest)
setIPSS<-(rawVAPOR[,c(01:20,34)])[,-c(1,5,11,15)]
# Subsistution des espaces non supportes par randomForest
colnames(setIPSS)<-make.names(colnames(setIPSS))
# 80% of rows -> training set
ns<-floor(0.80*nrow(setIPSS))
# shuffle rows
set.seed(2017)
shuffle<-setIPSS[sample(nrow(setIPSS)),]
trainIPSS<-shuffle[1:ns,]
testIPSS<-shuffle[-c(1:ns),]
dt<-rpart(IPSS__4 ~. , data = trainIPSS, method="class")
plot(dt, margin = .1, main="Arbre de Régression pour IPSS à 12 mois sur VAPOR")
text(dt, use.n = TRUE)
summary(dt)
rpart.plot::rpart.plot(dt,type=0, extra=4, main="Arbre de Régression pour IPSS à 12 mois sur VAPOR")
summary(dt)
resIPSS_VAPOR<-predict(dt, testIPSS)
corrplot::corrplot(t(resIPSS_VAPOR),is.corr=TRUE, cl.pos = 'n', title="Prédiction IPSS pour échantillon de test VAPOR")
table(validation = testIPSS$IPSS__4, prediction =  predict(dt, testIPSS, type="class"))
          # prediction
# validation 1 2 3 4 6 14
        # 1  1 1 0 0 0  0
        # 2  1 2 0 0 0  0
        # 3  1 0 0 0 0  0
        # 4  1 0 0 0 0  0
#        14 0 1 0 0 0  0
rf<-randomForest(as.factor(IPSS__4) ~ ., data = trainIPSS)
table(validation = testIPSS$IPSS__4, prediction =  predict(rf, testIPSS))
          # prediction
# validation 1 2 3 4 6 14
        # 1  2 0 0 0 0  0
        # 2  2 1 0 0 0  0
        # 3  1 0 0 0 0  0
        # 4  0 0 0 1 0  0
        # 14 0 0 0 0 1  0
##################
setQoL<-(rawVAPOR[,c(1:20,35)])[,-c(1,5,11,15)]
colnames(setQoL)<-make.names(colnames(setQoL))
set.seed(2017)
shuffle<-setQoL[sample(nrow(setQoL)),]
trainQoL<-shuffle[1:ns,]
testQoL<-shuffle[-c(1:ns),]
dt<-rpart(QoL__4 ~. , data = trainQoL, method="class")
plot(dt, margin = .1, main="Arbre de Régression pour QoL à 12 mois sur VAPOR")
text(dt, use.n = TRUE)
rpart.plot::rpart.plot(dt,type=0, extra=4, main="Arbre de Régression pour QoL à 12 mois sur VAPOR")
summary(dt)
resQoL_VAPOR<-predict(dt, testQoL)
corrplot::corrplot(t(resQoL_VAPOR),is.corr=TRUE, cl.pos = 'n', title="Prédiction QoL pour échantillon de test VAPOR")
table(validation = testQoL$QoL__4, prediction =  predict(dt, testQoL, type="class"))
          # prediction
# validation 0 1 2 3
         # 0 0 1 0 0
         # 1 0 6 0 0
         # 3 0 1 0 0
rf<-randomForest(as.factor(QoL__4) ~ ., data = trainQoL)
table(validation = testQoL$QoL__4, prediction =  predict(rf, testQoL))
          # prediction
# validation 0 1 2 3
         # 0 0 1 0 0
         # 1 0 6 0 0
         # 3 0 0 0 1
##################
setQmax<-(rawVAPOR[,c(01:20,36)])[,-c(1,5,11,15)]
colnames(setQmax)<-make.names(colnames(setQmax))
set.seed(2017)
shuffle<-setQmax[sample(nrow(setQmax)),]
trainQmax<-shuffle[1:ns,]
testQmax<-shuffle[-c(1:ns),]
dt<-rpart(Qmax..ml.s.__3 ~. , data = trainQmax)
plot(dt, margin = .1, main="Arbre de Régression pour Qmax à 12 mois sur VAPOR")
text(dt, use.n = TRUE)
summary(dt)
resQmax_VAPOR<-predict(dt, testQmax)
barplot( rbind(resQmax_VAPOR, testQmax$Qmax..ml.s.__3), beside=TRUE, names.arg = rownames(testQmax), main='Vérification Qmax pour  échantillon de test VAPOR' )
rf<-randomForest(Qmax..ml.s.__3 ~ ., data = trainQmax)
barplot( rbind(predict(rf, testQmax), testQmax$Qmax..ml.s.__3), beside=TRUE, names.arg = rownames(testQmax), main='Vérification Qmax (RandomForest) pour  échantillon de test VAPOR' )